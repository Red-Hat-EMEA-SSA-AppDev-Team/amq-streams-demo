## OCP deployment
quarkus.kubernetes-client.trust-certs=true
quarkus.openshift.env.configmaps=kafka-producer-config
quarkus.openshift.deployment-kind=Deployment
quarkus.container-image.group=my-kafka
quarkus.openshift.env.secrets=event-db-config
quarkus.openshift.part-of=event-application
quarkus.openshift.labels.app=kafka-clients
quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000

# dev config
quarkus.devservices.enabled=false
%dev.quarkus.http.port=8090

# producer config
producer.parted=false
producer.partitions=0,3
producer.tick-frequency=500
sequence.db=false

# Outbound
mp.messaging.outgoing.event-out.connector=smallrye-kafka
mp.messaging.outgoing.event-out.topic=event
mp.messaging.outgoing.event-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.event-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.event-out.max-inflight-messages=10

# Ensure that message is written at least on one replica
mp.messaging.outgoing.event-out.acks=all
mp.messaging.outgoing.event-out.waitForWriteCompletion=true

# Datasource
quarkus.datasource.db-kind=postgresql 
quarkus.datasource.username = ${POSTGRESQL_USERNAME:quarkus}
quarkus.datasource.password = ${POSTGRESQL_PASSWORD:quarkus}
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRESQL_SVC:localhost\:5432}/${POSTGRESQL_DATABASE:quarkus}
quarkus.datasource.jdbc.max-size=16